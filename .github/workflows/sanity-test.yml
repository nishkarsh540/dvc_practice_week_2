name: Model Sanity Check

on:
  pull_request:
    branches: [main]

permissions:
  pull-requests: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Create virtual environment and install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install pandas scikit-learn matplotlib joblib black flake8

      - name: Auto-format with Black
        run: |
          source .venv/bin/activate
          black --check --diff src/ tests/ || true
          echo "## Code Formatting (Black)" > report.md
          black --check --diff src/ tests/ >> report.md 2>&1 || echo "Formatting issues found" >> report.md
          echo "" >> report.md

      - name: Lint with Flake8
        run: |
          source .venv/bin/activate
          echo "## Linting Results (Flake8)" >> report.md
          flake8 src/ tests/ --max-line-length=88 --extend-ignore=E203,W503 >> report.md 2>&1 || echo "Linting issues found" >> report.md
          echo "" >> report.md

      - name: Train model
        run: |
          source .venv/bin/activate
          python src/train.py

      - name: Generate model performance metrics
        run: |
          source .venv/bin/activate
          python src/plot_metrics.py
          echo "## Model Performance Metrics" >> report.md
          echo "![Model Metrics](metrics.png)" >> report.md
          echo "" >> report.md

      - name: Run unit tests (unittest)
        run: |
          source .venv/bin/activate
          echo "## Unit Test Results" >> report.md
          python -m unittest discover -s tests >> report.md 2>&1 || true
          echo "" >> report.md
          echo "Tests completed on $(date)" >> report.md

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-artifacts
          path: |
            model.joblib
            metrics.png
            report.md
            *.json
            *.csv

      - name: Setup CML
        uses: iterative/setup-cml@v2

      - name: Comment test results with CML
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          source .venv/bin/activate
          cml comment create report.md

